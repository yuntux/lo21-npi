<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="fonctions_8h" kind="file">
    <compoundname>fonctions.h</compoundname>
    <includes local="no">QStack</includes>
    <includes local="no">string</includes>
    <includes refid="constante_8h" local="yes">constante.h</includes>
    <includes refid="complexe_8h" local="yes">complexe.h</includes>
    <includes refid="rationnel_8h" local="yes">rationnel.h</includes>
    <includedby refid="fonctions_8cpp" local="yes">/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/main.cpp</includedby>
    <includedby refid="mainwindow_8cpp" local="yes">/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/mainwindow.cpp</includedby>
    <includedby refid="rationnel_8cpp" local="yes">/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/rationnel.cpp</includedby>
    <incdepgraph>
      <node id="180">
        <label>QStack</label>
      </node>
      <node id="188">
        <label>logmessage.h</label>
        <link refid="logmessage_8h_source"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>string</label>
      </node>
      <node id="179">
        <label>/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h</label>
        <link refid="fonctions.h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>exception</label>
      </node>
      <node id="186">
        <label>entier.h</label>
        <link refid="entier_8h"/>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>complexe.h</label>
        <link refid="complexe_8h_source"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>iostream</label>
      </node>
      <node id="187">
        <label>rationnel.h</label>
        <link refid="rationnel_8h_source"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>constante.h</label>
        <link refid="constante_8h"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>QtGui</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="fonctions_8h_1a7a18f1d2b66a88b6fce563c918d62198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pgcd</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>pgcd</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="22" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="11" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="fonctions_8h_1a27cab872c8e16edd012a1b1a4c707dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ppcm</definition>
        <argsstring>(int X, int Y)</argsstring>
        <name>ppcm</name>
        <param>
          <type>int</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="24" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="21" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="fonctions_8h_1acf49ead148faa4b4d065d41a9d0f9161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sinus</definition>
        <argsstring>(Rationnel *r)</argsstring>
        <name>sinus</name>
        <param>
          <type><ref refid="class_rationnel" kindref="compound">Rationnel</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="26" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="fonctions_8h_1a370e75158c669314981f7019630970d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float cosinus</definition>
        <argsstring>(Rationnel *r)</argsstring>
        <name>cosinus</name>
        <param>
          <type><ref refid="class_rationnel" kindref="compound">Rationnel</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="28" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="fonctions_8h_1af208ac54c972ad4f354c13ecebd88b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float tangente</definition>
        <argsstring>(Rationnel *r)</argsstring>
        <name>tangente</name>
        <param>
          <type><ref refid="class_rationnel" kindref="compound">Rationnel</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="30" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="fonctions_8h_1aa48b58c71fa7053a5b1af1d8f98e601b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sinush</definition>
        <argsstring>(Rationnel *r)</argsstring>
        <name>sinush</name>
        <param>
          <type><ref refid="class_rationnel" kindref="compound">Rationnel</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="32" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="fonctions_8h_1aeae1e784bc1656c24e4adb1d4f49cdc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float cosinush</definition>
        <argsstring>(Rationnel *r)</argsstring>
        <name>cosinush</name>
        <param>
          <type><ref refid="class_rationnel" kindref="compound">Rationnel</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h" line="34" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_calculatrice" kindref="compound">Calculatrice</ref> en polonais inversé. Fonctions outils diverses. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Aurélien DUMAINE </para><simplesectsep/><para>Simon LANCELOT </para></simplesect>
<simplesect kind="version"><para>0.1 </para></simplesect>
<simplesect kind="date"><para>juin 2012</para></simplesect>
Licence : GNU/GPL version 3 (<ulink url="http://www.gnu.org/copyleft/gpl.html">http://www.gnu.org/copyleft/gpl.html</ulink>) </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>FONCTIONS_H</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FONCTIONS_H</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;QStack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="constante_8h" kindref="compound" tooltip="Calculatrice en polonais inversé. Classe de la GUI QT-MainWindow.">constante.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;complexe.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rationnel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pgcd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ppcm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Y);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinus(<ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>*r);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosinus(<ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>*r);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tangente(<ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>*r);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinush(<ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>*r);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosinush(<ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>*r);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment">template<sp/>&lt;class<sp/>T&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="comment">T<sp/>inv(T<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>result=(-num);</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>return<sp/>(result);</highlight></codeline>
<codeline lineno="42"><highlight class="comment">}</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">template<sp/>&lt;class<sp/>T&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>sqr(T<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>num*num;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>(result);</highlight></codeline>
<codeline lineno="49"><highlight class="comment">}</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">template<sp/>&lt;class<sp/>T&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>cube(T<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>num*num*num;</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>(result);</highlight></codeline>
<codeline lineno="56"><highlight class="comment">}</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">float<sp/>fact(int<sp/>n);</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">float<sp/>sum(QStack&lt;float&gt;&amp;<sp/>pile,<sp/>int<sp/>x);</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">float<sp/>prod(QStack&lt;float&gt;&amp;<sp/>pile);</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">float<sp/>diff(QStack&lt;float&gt;&amp;<sp/>pile);</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">float<sp/>divise(QStack&lt;float&gt;&amp;<sp/>pile);</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">float<sp/>mean(QStack&lt;float&gt;&amp;<sp/>pile,<sp/>int<sp/>x);</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">void<sp/>dup(QStack&lt;float&gt;&amp;<sp/>pile);</highlight></codeline>
<codeline lineno="71"><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">void<sp/>afficher(QStack&lt;float&gt;&amp;<sp/>pile);</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">void<sp/>read_expression(std::string<sp/>expr,<sp/>QStack&lt;float&gt;&amp;<sp/>pile);</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">Complexe<sp/>sum_comp(QStack&lt;Complexe&gt;<sp/>&amp;pile,<sp/>int<sp/>x);</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">Complexe<sp/>diff_comp(QStack&lt;Complexe&gt;<sp/>&amp;pile);</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">Complexe<sp/>prod_comp(QStack&lt;Complexe&gt;<sp/>&amp;pile);</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">Complexe<sp/>conjugue(Complexe<sp/>c);</highlight></codeline>
<codeline lineno="83"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>FONCTIONS_H</highlight></codeline>
    </programlisting>
    <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/fonctions.h"/>
  </compounddef>
</doxygen>
