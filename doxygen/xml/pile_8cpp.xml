<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="pile_8cpp" kind="file">
    <compoundname>pile.cpp</compoundname>
    <includes refid="pile_8h" local="yes">pile.h</includes>
    <includes refid="calculatrice_8h" local="yes">calculatrice.h</includes>
    <includes refid="logsystem_8h" local="yes">logsystem.h</includes>
    <includes refid="logmessage_8h" local="yes">logmessage.h</includes>
    <incdepgraph>
      <node id="856">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h"/>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>rationnel.h</label>
        <link refid="rationnel_8h"/>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>calculatrice.h</label>
        <link refid="calculatrice_8h"/>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
      </node>
      <node id="858">
        <label>QStack</label>
      </node>
      <node id="857">
        <label>QMainWindow</label>
      </node>
      <node id="843">
        <label>pile.h</label>
        <link refid="pile_8h"/>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
      </node>
      <node id="849">
        <label>logmessage.h</label>
        <link refid="logmessage_8h"/>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>exception</label>
      </node>
      <node id="842">
        <label>/home/yuntux/UTC/GI02/LO21/projet/projet_propre/pile.cpp</label>
        <link refid="pile.cpp"/>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="846">
        <label>vector</label>
      </node>
      <node id="845">
        <label>stack</label>
      </node>
      <node id="852">
        <label>complexe.h</label>
        <link refid="complexe_8h"/>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
      </node>
      <node id="851">
        <label>logsystem.h</label>
        <link refid="logsystem_8h"/>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
      </node>
      <node id="844">
        <label>iostream</label>
      </node>
      <node id="848">
        <label>QtGui</label>
      </node>
      <node id="853">
        <label>entier.h</label>
        <link refid="entier_8h"/>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="847">
        <label>constante.h</label>
        <link refid="constante_8h"/>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pile_8h" kindref="compound">pile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="calculatrice_8h" kindref="compound" tooltip="Calculatrice en polonais inversÃ©. Singleton de la calculatrice.">calculatrice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logsystem_8h" kindref="compound">logsystem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logmessage_8h" kindref="compound">logmessage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_pile_1a18a4d9a9b8013b36a5423817f9fb9049" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pile_1a18a4d9a9b8013b36a5423817f9fb9049" kindref="member">Pile::push</ref>(<ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>p.push_front(ptr);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_pile_1a44545327a8d02ad9775a2c918ea5cdfc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pile_1a44545327a8d02ad9775a2c918ea5cdfc" kindref="member">Pile::rowCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.size();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_pile_1ac9d6e388d3a98eb57a786f9bbec30952" refkind="member"><highlight class="normal">QVariant<sp/><ref refid="class_pile_1ac9d6e388d3a98eb57a786f9bbec30952" kindref="member">Pile::data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="29"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!index.isValid())</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVariant();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index.row()<sp/>&gt;=<sp/>this-&gt;size())</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVariant();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(role<sp/>==<sp/>Qt::DisplayRole)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(p.at(index.row()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>p.at(index.row())-&gt;afficher();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.at(index.row())-&gt;afficher();<sp/></highlight><highlight class="comment">//renvoyer<sp/>un<sp/>QStrigng</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVariant();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_pile_1ab2d1398d675586ff34994e2b109df152" refkind="member"><highlight class="normal"><ref refid="class_pile_1ab2d1398d675586ff34994e2b109df152" kindref="member">Pile::~Pile</ref>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>this-&gt;size();<sp/></highlight><highlight class="comment">//ATTENTION<sp/>:<sp/>il<sp/>faut<sp/>bien<sp/>fixer<sp/>la<sp/>taille<sp/>avant<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;s;<sp/>i++){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>this-&gt;pop();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(tmp);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_pile_1a4964563804a254503d6413e5ba83d3c5" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_pile_1a4964563804a254503d6413e5ba83d3c5" kindref="member">Pile::afficher</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>string_pile;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>string_pile<sp/>=<sp/>string_pile<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;###<sp/>DEBUT<sp/>PILE###\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;p.size();<sp/>i++){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_pile<sp/>=<sp/>string_pile<sp/>+<sp/>p.at(i)-&gt;afficher()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>string_pile<sp/>=<sp/>string_pile<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;###<sp/>FIN<sp/>PILE###&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string_pile;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_pile_1a2bbdc329f485cd017f8cbf88456ae68a" refkind="member"><highlight class="normal"><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/><ref refid="class_pile_1a2bbdc329f485cd017f8cbf88456ae68a" kindref="member">Pile::pop</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>p.at(0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.removeAt(0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_message" kindref="compound">LogMessage</ref><sp/>msg(0,<sp/></highlight><highlight class="stringliteral">&quot;Depilement.&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmessage_8h_1ac0565c81f330a720d673510e0886bb71aafb733ab41298343829a774830914459" kindref="member">tracabilite</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_system_1ab5b398fac784d6c20576829056a364a2" kindref="member">LogSystem::getInstance</ref>().<ref refid="class_log_system_1a29ba53a9628ac2c2c517bf751cb84a9a" kindref="member">ajouterFcihierEtConsole</ref>(msg);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*Constante*<sp/>Pile::top()</highlight></codeline>
<codeline lineno="93"><highlight class="comment">{</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>p.top;</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_pile_1a91875101e0976f054d1db8869a00b11d" refkind="member"><highlight class="normal"><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/><ref refid="class_pile_1a91875101e0976f054d1db8869a00b11d" kindref="member">Pile::sum</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>res<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref>(0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;x;i++)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=res-&gt;<ref refid="class_constante_1a243b6eabd1fd476af827c5b523cddfac" kindref="member">addition</ref>(this-&gt;pop());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;push(res);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_pile_1a312bdfd2e167615c8d7f11adb2e639ed" refkind="member"><highlight class="normal"><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/><ref refid="class_pile_1a312bdfd2e167615c8d7f11adb2e639ed" kindref="member">Pile::mean</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>this-&gt;sum(x);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entier" kindref="compound">Entier</ref><sp/>e(x);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref>(tmp-&gt;<ref refid="class_constante_1ac41fa56ac5ebdfbcc886b8d249fb876d" kindref="member">division</ref>(&amp;e));</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_pile_1aa3991438f190580607d7bbbd50ecc0c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pile_1aa3991438f190580607d7bbbd50ecc0c3" kindref="member">Pile::clear</ref>(){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;this-&gt;size();<sp/>i++){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>this-&gt;pop();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(tmp);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_message" kindref="compound">LogMessage</ref><sp/>msg(0,<sp/></highlight><highlight class="stringliteral">&quot;Suppression<sp/>de<sp/>tous<sp/>les<sp/>Ã©lÃ©ments<sp/>de<sp/>la<sp/>liste.&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmessage_8h_1ac0565c81f330a720d673510e0886bb71aafb733ab41298343829a774830914459" kindref="member">tracabilite</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_system_1ab5b398fac784d6c20576829056a364a2" kindref="member">LogSystem::getInstance</ref>().<ref refid="class_log_system_1a29ba53a9628ac2c2c517bf751cb84a9a" kindref="member">ajouterFcihierEtConsole</ref>(msg);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_pile_1a081f7843d01cae1f0f7be7d92e46d5d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pile_1a081f7843d01cae1f0f7be7d92e46d5d2" kindref="member">Pile::dup</ref>(){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>this-&gt;p.at(0)-&gt;<ref refid="class_constante_1ac6fb071229429f82cf489f8313461efa" kindref="member">recopie</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;push(tmp);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_message" kindref="compound">LogMessage</ref><sp/>msg(0,<sp/></highlight><highlight class="stringliteral">&quot;Duplication<sp/>de<sp/>la<sp/>tete<sp/>de<sp/>pile.&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmessage_8h_1ac0565c81f330a720d673510e0886bb71aafb733ab41298343829a774830914459" kindref="member">tracabilite</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_system_1ab5b398fac784d6c20576829056a364a2" kindref="member">LogSystem::getInstance</ref>().<ref refid="class_log_system_1a29ba53a9628ac2c2c517bf751cb84a9a" kindref="member">ajouterFcihierEtConsole</ref>(msg);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_pile_1a4be384a2c00fff0afed507231a2974dc" refkind="member"><highlight class="normal"><ref refid="class_pile" kindref="compound">Pile</ref>*<sp/><ref refid="class_pile_1a4be384a2c00fff0afed507231a2974dc" kindref="member">Pile::copier_pile</ref>(){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pile" kindref="compound">Pile</ref>*<sp/>nouv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_pile" kindref="compound">Pile</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=0;<sp/>i&lt;p.size();<sp/>i++){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>p.at(i)-&gt;<ref refid="class_constante_1ac6fb071229429f82cf489f8313461efa" kindref="member">recopie</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nouv-&gt;p.push_back(tmp);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nouv;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_pile_1a7488ed257c6ceb16ed57a9fffb0726d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pile_1a7488ed257c6ceb16ed57a9fffb0726d5" kindref="member">Pile::drop</ref>(){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp<sp/>=<sp/>this-&gt;pop();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(tmp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_message" kindref="compound">LogMessage</ref><sp/>msg(0,<sp/></highlight><highlight class="stringliteral">&quot;Suppression<sp/>tete<sp/>de<sp/>pile.&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmessage_8h_1ac0565c81f330a720d673510e0886bb71aafb733ab41298343829a774830914459" kindref="member">tracabilite</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_system_1ab5b398fac784d6c20576829056a364a2" kindref="member">LogSystem::getInstance</ref>().<ref refid="class_log_system_1a29ba53a9628ac2c2c517bf751cb84a9a" kindref="member">ajouterFcihierEtConsole</ref>(msg);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_pile_1ab6c3f9840427e2be87e0d76c8697fff5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pile_1ab6c3f9840427e2be87e0d76c8697fff5" kindref="member">Pile::swap</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp1<sp/>=<sp/>p.at(x);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constante" kindref="compound">Constante</ref>*<sp/>tmp2<sp/>=<sp/>p.at(y);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>p[x]<sp/>=<sp/>tmp2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>p[y]<sp/>=<sp/>tmp1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogMessage<sp/>msg(0,<sp/>&quot;Inversion<sp/>des<sp/>Ã©lÃ©ments<sp/>&quot;+x+&quot;<sp/>et<sp/>&quot;+y+&quot;<sp/>de<sp/>la<sp/>pile.&quot;,<sp/>tracabilite);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>LogSystem::getInstance().ajouterFcihierEtConsole(msg);</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_pile_1a380c3a467b58c175aef4f2cdc0f7a2c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pile_1a380c3a467b58c175aef4f2cdc0f7a2c7" kindref="member">Pile::sauv_pile_context</ref>(){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>this-&gt;size();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;s;<sp/>i++){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>libelle(</highlight><highlight class="stringliteral">&quot;PileStockage/Element&quot;</highlight><highlight class="normal">+QString::number(i));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.at(i)-&gt;afficher().count(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>:<sp/>bug<sp/>des<sp/>complexes<sp/>lors<sp/>du<sp/>chargement<sp/>du<sp/>.ini<sp/>=&gt;<sp/>boucle<sp/>infinie<sp/>=&gt;<sp/>on<sp/>ne<sp/>les<sp/>sauvegarde<sp/>pas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calculatrice_1a6311c8e75ac47e9f43ecd47ebc22c10b" kindref="member">Calculatrice::getInstance</ref>().<ref refid="class_calculatrice_1ac1fd3f178488afb8bc25dae790a9756d" kindref="member">getContext</ref>()-&gt;setValue(libelle,<sp/>p.at(i)-&gt;afficher());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_message" kindref="compound">LogMessage</ref><sp/>msg(0,<sp/></highlight><highlight class="stringliteral">&quot;Sauvegarde<sp/>de<sp/>la<sp/>pile<sp/>dans<sp/>le<sp/>fichier<sp/>ini.&quot;</highlight><highlight class="normal">,<sp/><ref refid="logmessage_8h_1ac0565c81f330a720d673510e0886bb71aafb733ab41298343829a774830914459" kindref="member">tracabilite</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_system_1ab5b398fac784d6c20576829056a364a2" kindref="member">LogSystem::getInstance</ref>().<ref refid="class_log_system_1a29ba53a9628ac2c2c517bf751cb84a9a" kindref="member">ajouterFcihierEtConsole</ref>(msg);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/yuntux/UTC/GI02/LO21/projet/projet_propre/pile.cpp"/>
  </compounddef>
</doxygen>
