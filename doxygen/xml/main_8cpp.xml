<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="main_8cpp" kind="file">
    <compoundname>main.cpp</compoundname>
    <includes local="no">QtGui/QApplication</includes>
    <includes refid="mainwindow_8h" local="yes">mainwindow.h</includes>
    <includes refid="fonctions_8h" local="yes">fonctions.h</includes>
    <includes refid="complexe_8h" local="yes">complexe.h</includes>
    <includes refid="entier_8h" local="yes">entier.h</includes>
    <includes refid="rationnel_8h" local="yes">rationnel.h</includes>
    <includes refid="pile_8h" local="yes">pile.h</includes>
    <includes refid="reel_8h" local="yes">reel.h</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">cmath</includes>
    <includes refid="logmessage_8h" local="yes">logmessage.h</includes>
    <includes refid="logsystem_8h" local="yes">logsystem.h</includes>
    <incdepgraph>
      <node id="224">
        <label>pile.h</label>
        <link refid="pile_8h_source"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>QStack</label>
      </node>
      <node id="239">
        <label>cmath</label>
      </node>
      <node id="233">
        <label>logmessage.h</label>
        <link refid="logmessage_8h_source"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>string</label>
      </node>
      <node id="222">
        <label>QMainWindow</label>
      </node>
      <node id="221">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h_source"/>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>QtGui/QApplication</label>
      </node>
      <node id="235">
        <label>fonctions.h</label>
        <link refid="fonctions_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>exception</label>
      </node>
      <node id="238">
        <label>typeinfo</label>
      </node>
      <node id="231">
        <label>entier.h</label>
        <link refid="entier_8h"/>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>logsystem.h</label>
        <link refid="logsystem_8h_source"/>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>vector</label>
      </node>
      <node id="226">
        <label>stack</label>
      </node>
      <node id="237">
        <label>reel.h</label>
        <link refid="reel_8h_source"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>complexe.h</label>
        <link refid="complexe_8h_source"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/main.cpp</label>
        <link refid="main.cpp"/>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>iostream</label>
      </node>
      <node id="232">
        <label>rationnel.h</label>
        <link refid="rationnel_8h_source"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>constante.h</label>
        <link refid="constante_8h"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>QtGui</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/main.cpp" line="38" bodyfile="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/main.cpp" bodystart="37" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;QtGui/QApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mainwindow.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fonctions_8h" kindref="compound" tooltip="Calculatrice en polonais inversé. Fonctions outils diverses.">fonctions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;complexe.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="entier_8h" kindref="compound" tooltip="Calculatrice en polonais inversé. Classe Entier.">entier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rationnel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;reel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logmessage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logsystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//DESIGN<sp/>PATTERN<sp/>:<sp/>command(Annuler/Rétablir),<sp/>Factory,<sp/>Composite,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//Gérer<sp/>les<sp/>erreurs<sp/>=&gt;<sp/>exeptions<sp/>standards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//Sauvegarde/Chargmenet<sp/>des<sp/>piles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//Traiter<sp/>l&apos;une<sp/>des<sp/>trois<sp/>options<sp/>:<sp/>logMessage/onglets/CommmandeUtilisateur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//DocDOXYGEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//Rapport<sp/>et<sp/>modélisation<sp/>UML(diag<sp/>de<sp/>class<sp/>et<sp/>diag<sp/>de<sp/>séquence)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//QListview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//Annuller<sp/>rétablir<sp/>doit<sp/>prendre<sp/>un<sp/>int<sp/>en<sp/>paramètre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//dans<sp/>la<sp/>pile<sp/>de<sp/>calcul<sp/>:<sp/>on<sp/>stocke<sp/>5,4,+,20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//dans<sp/>la<sp/>pile<sp/>d&apos;affichage<sp/>:<sp/>on<sp/>a<sp/>que<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//RAPOPRT<sp/>:<sp/>on<sp/>gère<sp/>les<sp/>rationnel<sp/>sans<sp/>touche<sp/>supplémentaire.<sp/>On<sp/>considère<sp/>que<sp/>le<sp/>slash<sp/>est<sp/>l&apos;opréateur<sp/>de<sp/>division<sp/>que<sp/>s&apos;il<sp/>est<sp/>précédé<sp/>d&apos;un<sp/>esdpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//mods<sp/>de<sp/>la<sp/>calto<sp/>en<sp/>static<sp/>???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//quid<sp/>des<sp/>concepts<sp/>centraux<sp/>de<sp/>LO21<sp/>:<sp/>surcharge,<sp/>héritage,<sp/>polymorphisme,<sp/>designPattern,<sp/>dynamicCast...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//RAPPORT<sp/>:<sp/>Étant<sp/>donné<sp/>que<sp/>dans<sp/>un<sp/>ordi<sp/>un<sp/>réel<sp/>non<sp/>rationnel<sp/>est<sp/>stocké<sp/>comme<sp/>une<sp/>approcx<sp/>(PI,<sp/>RACINE_2<sp/>sont<sp/>des<sp/>approx<sp/>dans<sp/>un<sp/>float)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>On<sp/>aurait<sp/>pu<sp/>représenter<sp/>les<sp/>parties<sp/>imaginaire<sp/>et<sp/>réélles<sp/>d&apos;un<sp/>complexe<sp/>par<sp/>des<sp/>rationnels<sp/>et<sp/>toutes<sp/>les<sp/>constantes<sp/>par<sp/>des<sp/>complexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>code<sp/>simplifié<sp/>mais<sp/>gaspillage<sp/>de<sp/>mémoire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//DYNAMIC<sp/>CAST<sp/>sur<sp/>toutes<sp/>les<sp/>fonction<sp/>assymétrique<sp/>des<sp/>toutes<sp/>les<sp/>classes<sp/>déivée<sp/>des<sp/>constante<sp/>sauf<sp/>pour<sp/>la<sp/>classe<sp/>complexe<sp/>(rationnel?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//implémenter<sp/>une<sp/>fonction<sp/>de<sp/>simplification<sp/>pour<sp/>les<sp/>rationnels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entier" kindref="compound">Entier</ref><sp/>e1(5);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entier" kindref="compound">Entier</ref><sp/>e2(2);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entier" kindref="compound">Entier</ref><sp/>e3(3);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>ra1(2,5);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>ra2(5,6);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_rationnel" kindref="compound">Rationnel</ref><sp/>ra3(2,3);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_reel" kindref="compound">Reel</ref><sp/>re1(3.1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_reel" kindref="compound">Reel</ref><sp/>re2(3.2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_reel" kindref="compound">Reel</ref><sp/>re3(3.3);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c11(&amp;e1,<sp/>&amp;e2);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c12(&amp;e3,<sp/>&amp;e1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c13(&amp;e1,<sp/>&amp;re3);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c21(&amp;ra1,<sp/>&amp;ra2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c22(&amp;ra2,<sp/>&amp;ra3);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c23(&amp;ra3,<sp/>&amp;e3);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c31(&amp;re1,<sp/>&amp;re2);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c32(&amp;re1,<sp/>&amp;ra3);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_complexe" kindref="compound">Complexe</ref><sp/>c33(&amp;re1,<sp/>&amp;e3);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra1.setDenominateur(0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>e)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>:<sp/>interagir<sp/>avec<sp/>logsystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERREUR<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pile<sp/>Stockage;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>e1.division(&amp;c11)-&gt;afficher();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>ra1.division(&amp;c11)-&gt;afficher();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>re1.division(&amp;c11)-&gt;afficher();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Stockage.push(c11.division(&amp;c12));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>QString<sp/>tmp0<sp/>=<sp/>&quot;100&quot;;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>Stockage.push(new<sp/>Entier(tmp0.toInt()));</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>QString<sp/>tmp1<sp/>=<sp/>&quot;30&quot;;<sp/>//on<sp/>detecte<sp/>que<sp/>c&apos;est<sp/>un<sp/>entier</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>Stockage.push(new<sp/>Entier(tmp1.toInt()));</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>QString<sp/>tmp2<sp/>=<sp/>&quot;2.3&quot;;<sp/>//on<sp/>detecte<sp/>que<sp/>c&apos;est<sp/>un<sp/>réel</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>Stockage.push(new<sp/>Reel(tmp2.toFloat()));</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Stockage.afficher();</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>QString<sp/>tmp3<sp/>=<sp/>&quot;+&quot;;<sp/>//on<sp/>détecte<sp/>que<sp/>c&apos;est<sp/>l&apos;opérateur<sp/>+</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>Constante*<sp/>operande1<sp/>=<sp/>Stockage.pop();</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>Constante*<sp/>operande2<sp/>=<sp/>Stockage.pop();</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>Stockage.push(operande1-&gt;addition(operande2));</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Stockage.afficher();</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>QString<sp/>tmp4<sp/>=<sp/>&quot;5.3&quot;;<sp/>//on<sp/>detecte<sp/>que<sp/>c&apos;est<sp/>un<sp/>réel</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>Stockage.push(new<sp/>Reel(tmp4.toFloat()));</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Stockage.afficher();</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>QString<sp/>tmp5<sp/>=<sp/>&quot;+&quot;;<sp/>//on<sp/>détecte<sp/>que<sp/>c&apos;est<sp/>l&apos;opérateur<sp/>+</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>Constante*<sp/>operande11<sp/>=<sp/>Stockage.pop();</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>Constante*<sp/>operande12<sp/>=<sp/>Stockage.pop();</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>Stockage.push(operande11-&gt;addition(operande12));</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>//qDebug()<sp/>&lt;&lt;<sp/>Stockage.afficher();</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IL<sp/>FAUT<sp/>QU&apos;ON<sp/>UTILISE<sp/>AU<sp/>PLUS<sp/>LA<sp/>SYMETRIE<sp/>DES<sp/>OPERATIONS<sp/>(+<sp/>et<sp/>*)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>implemente<sp/>la<sp/>multiplication<sp/>que<sp/>d&apos;un<sp/>coté<sp/>(complexe)<sp/>et<sp/>de<sp/>l&apos;autre<sp/>on<sp/>revoie<sp/>c_complexe.multiplication(this)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//utiliser<sp/>INV<sp/>et<sp/>multiplication<sp/>pour<sp/>avoir<sp/>la<sp/>multiplication<sp/>?<sp/>Fuite<sp/>de<sp/>mémoire<sp/>du<sp/>à<sp/>la<sp/>non<sp/>libération<sp/>de<sp/>l&apos;intermédiaire<sp/>créé<sp/>par<sp/>INV<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>c11.addition(&amp;c21)-&gt;afficher();<sp/>//Complexe(int$int)<sp/>+<sp/>Complexe<sp/>(ra$ra)<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>c21.addition(&amp;c22)-&gt;afficher();<sp/>//Complexe(ra$ra)<sp/>+<sp/>Complexe<sp/>(ra$ra)<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>c23.addition(&amp;c31)-&gt;afficher();<sp/>//Complexe(ra$e)<sp/>+<sp/>Complexe<sp/>(re$re)<sp/>KO<sp/>=&gt;<sp/>ra+re<sp/>impossible<sp/>sans<sp/>perte<sp/>de<sp/>précision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>c11.produit(&amp;c12)-&gt;afficher();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qDebug()<sp/>&lt;&lt;<sp/>c11.soustraction(&amp;c12)-&gt;afficher();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*qDebug()<sp/>&lt;&lt;<sp/>e3.addition(&amp;e1)-&gt;afficher();</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;re1.addition(&amp;re2)-&gt;afficher();</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;ra1.addition(&amp;ra2)-&gt;afficher();</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;c21.addition(&amp;ra1)-&gt;afficher();</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;e2.produit(&amp;e2)-&gt;afficher();</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;e2.soustraction(&amp;re1)-&gt;afficher();</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;ra2.division(&amp;ra3)-&gt;afficher();</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;c11.produit(&amp;ra1)-&gt;afficher();</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()&lt;&lt;&quot;\n&quot;&lt;&lt;sinush(&amp;ra1);</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Constante<sp/>*a<sp/>=<sp/>e1.addition(&amp;e2);</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>Complexe<sp/>*ent<sp/>=<sp/>new<sp/>Complexe(&amp;re1);</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>ent-&gt;afficher();</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>ent-&gt;getPartieReelle()-&gt;afficher();</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>ent-&gt;getPartieImaginaire()-&gt;afficher();</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>//qDebug()<sp/>&lt;&lt;<sp/>a-&gt;afficher();</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication<sp/>a(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_main_window" kindref="compound">MainWindow</ref><sp/>w;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>w.show();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.exec();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/yuntux/UTC/GI02/LO21/projet/lo21-npi.2/main.cpp"/>
  </compounddef>
</doxygen>
